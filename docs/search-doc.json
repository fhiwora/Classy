[{"title":"Class","type":0,"sectionRef":"#","url":"api/Class","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Class","url":"api/Class#properties","content":" "},{"title":"ClassName​","type":1,"pageTitle":"Class","url":"api/Class#ClassName","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Class.ClassName: string The name of the class.  "},{"title":"Super​","type":1,"pageTitle":"Class","url":"api/Class#Super","content":"&lt;/&gt; Class.Super: string The class that the class inherits from (if it inherits). "},{"title":"Functions​","type":1,"pageTitle":"Class","url":"api/Class#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Class","url":"api/Class#new","content":"&lt;/&gt; Class.new(...: tuple?) → Object&lt;Class&gt; Creates a new object of the class it is being called on. local class = Classy.new({ ClassName = &quot;class&quot; }) local object = class.new()   "},{"title":"init​","type":1,"pageTitle":"Class","url":"api/Class#init","content":"&lt;/&gt; Class.init(...: tuple?) → () Does any initialization of the object when new is called.  "},{"title":"terminate​","type":1,"pageTitle":"Class","url":"api/Class#terminate","content":"&lt;/&gt; Class.terminate(...: tuple?) → () Does any deconstruction of the object when Destroy is called.  "},{"title":"Destroy​","type":1,"pageTitle":"Class","url":"api/Class#Destroy","content":"&lt;/&gt; Class.Destroy(...: tuple?) → () Destroys the object it is called on. "},{"title":"Classy","type":0,"sectionRef":"#","url":"api/Classy","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Classy","url":"api/Classy#types","content":" "},{"title":"ClassInfo​","type":1,"pageTitle":"Classy","url":"api/Classy#ClassInfo","content":"&lt;/&gt; interface ClassInfo { ClassName: string-- The name of the class terminate: function?-- [Optional] The method that is called when destroying an object of the class init: function?-- [Optional] The method that is called when creating an object of the class } This is what you should be sending when creating a new class or subclass. It is to be noted, however, that you can define terminate and init outside of this table by referring to your class and defining it, like so: local newClass = Classy.NewClass({ ClassName = &quot;newClass&quot; }) --[[ it is to be noted that any arguments you pass to `new` on newClass and `Destroy` on individual objects will be passed to init and terminate respectively. --]] function newClass:init() end function newClass:terminate() end You can also define static fields in the ClassInfo. "},{"title":"Properties​","type":1,"pageTitle":"Classy","url":"api/Classy#properties","content":" "},{"title":"Mixins​","type":1,"pageTitle":"Classy","url":"api/Classy#Mixins","content":"&lt;/&gt; Classy.Mixins: Mixins This is a reference to the Mixins table, where you can register mixins, add mixins to a class, and more. For full documentation refer to the Mixins documentation "},{"title":"Functions​","type":1,"pageTitle":"Classy","url":"api/Classy#functions","content":" "},{"title":"NewSubclass​","type":1,"pageTitle":"Classy","url":"api/Classy#NewSubclass","content":"&lt;/&gt; Classy.NewSubclass( subclassInfo: ClassInfo,-- The info for the class (see ClassInfo) superclassAny: string | Class,-- The class that this one will be inheriting from mixins: {string}?-- A table of mixins to add ) → Class This creates a new subclass of an already existing class. "},{"title":"Errors","type":1,"pageTitle":"Classy","url":"api/Classy##","content":"Type\tDescriptionNonexistent Superclass\tOccurs when the Superclass passed doesn't exist  "},{"title":"NewClass​","type":1,"pageTitle":"Classy","url":"api/Classy#NewClass","content":"&lt;/&gt; Classy.NewClass( classInfo: ClassInfo,-- The info for the class (see ClassInfo) mixins: {string}?,-- A table of mixins to add superclassAny: string | Class-- The class that this one will be inheriting from ) → Class This creates a new class.  "},{"title":"NewObjectOfClass​","type":1,"pageTitle":"Classy","url":"api/Classy#NewObjectOfClass","content":"&lt;/&gt; Classy.NewObjectOfClass( className: string, ...: tuple?-- this will pass any arguments you wish to pass to the instantiation of the class ) → Object&lt;Class&gt; This creates a object of an already existing class.  "},{"title":"GetClass​","type":1,"pageTitle":"Classy","url":"api/Classy#GetClass","content":"&lt;/&gt; Classy.GetClass(className: string) → Class This gets a class by its class name. "},{"title":"Errors","type":1,"pageTitle":"Classy","url":"api/Classy##","content":"Type\tDescriptionNonexistent Class\tOccurs when the class couldn't be found "},{"title":"Mixins","type":0,"sectionRef":"#","url":"api/Mixins","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Mixins","url":"api/Mixins#functions","content":" "},{"title":"RegisterMixinFolder​","type":1,"pageTitle":"Mixins","url":"api/Mixins#RegisterMixinFolder","content":"&lt;/&gt; Mixins.RegisterMixinFolder(folder: Instance &lt;Folder &gt;) → () Registers the folder as a valid location for finding Mixins.  "},{"title":"RegisterMixin​","type":1,"pageTitle":"Mixins","url":"api/Mixins#RegisterMixin","content":"&lt;/&gt; Mixins.RegisterMixin( mixinName: string, mixin: Dictionary ) → () Manually register a Mixin see example at the top of the page.  "},{"title":"RegisterMixinFromModule​","type":1,"pageTitle":"Mixins","url":"api/Mixins#RegisterMixinFromModule","content":"&lt;/&gt; Mixins.RegisterMixinFromModule(mixinModule: Instance &lt;ModuleScript &gt;) → () Requires the ModuleScript passed and requiers the Mixin.  "},{"title":"RegisterMultipleMixins​","type":1,"pageTitle":"Mixins","url":"api/Mixins#RegisterMultipleMixins","content":"&lt;/&gt; Mixins.RegisterMultipleMixins(mixins: {Dictionary}) → () Registers multiple Mixins.  "},{"title":"RegisterMultipleMixinsFromModules​","type":1,"pageTitle":"Mixins","url":"api/Mixins#RegisterMultipleMixinsFromModules","content":"&lt;/&gt; Mixins.RegisterMultipleMixinsFromModules(mixinModules: {Instance &lt;ModuleScript &gt;}) → () Requires and registers multiple Mixin Modules.  "},{"title":"DoesClassHaveMixin​","type":1,"pageTitle":"Mixins","url":"api/Mixins#DoesClassHaveMixin","content":"&lt;/&gt; Mixins.DoesClassHaveMixin( classAny: string | Class, mixinName: string ) → boolean Checks if a Class has the Mixin being checked for. "},{"title":"Errors","type":1,"pageTitle":"Mixins","url":"api/Mixins##","content":"Type\tDescriptionNonexistent Class\tOccurs when the Class doesn't exist  "},{"title":"DoesClassHaveAnyMixins​","type":1,"pageTitle":"Mixins","url":"api/Mixins#DoesClassHaveAnyMixins","content":"&lt;/&gt; Mixins.DoesClassHaveAnyMixins( classAny: string | Class, mixins: {string} ) → boolean,table-- the boolean is whether it had any of the mixins or not, the table is an array of which mixins it had Checks if a Class has any of the mixins passed. "},{"title":"Errors","type":1,"pageTitle":"Mixins","url":"api/Mixins##","content":"Type\tDescriptionNonexistent Class\tOccurs when the Class doesn't exist  "},{"title":"DoesClassHaveAllMixins​","type":1,"pageTitle":"Mixins","url":"api/Mixins#DoesClassHaveAllMixins","content":"&lt;/&gt; Mixins.DoesClassHaveAllMixins( classAny: string | Class, mixins: {string} ) → boolean Checks if a Class has all the mixins passed. "},{"title":"Errors","type":1,"pageTitle":"Mixins","url":"api/Mixins##","content":"Type\tDescriptionNonexistent Class\tOccurs when the Class doesn't exist  "},{"title":"AddMixin​","type":1,"pageTitle":"Mixins","url":"api/Mixins#AddMixin","content":"&lt;/&gt; Mixins.AddMixin( classAny: string | Class, mixinName: string ) → () Adds a Mixin to a Class. "},{"title":"Errors","type":1,"pageTitle":"Mixins","url":"api/Mixins##","content":"Type\tDescriptionNonexistent Class\tOccurs when the Class doesn't exist Nonexistent Mixin\tOccurs when the Class doesn't exist Mixin Apart of Class\tOccurs when the Mixin is already apart of the Class  "},{"title":"AddMultipleMixins​","type":1,"pageTitle":"Mixins","url":"api/Mixins#AddMultipleMixins","content":"&lt;/&gt; Mixins.AddMultipleMixins( classAny: string | Class, mixins: {string} ) → () Adds multiple Mixins to a Class. "},{"title":"Errors","type":1,"pageTitle":"Mixins","url":"api/Mixins##","content":"Type\tDescriptionNonexistent Class\tOccurs when the Class doesn't exist Nonexistent Mixin\tOccurs when the Class doesn't exist Mixin Apart of Class\tOccurs when the Mixin is already apart of the Class "}]